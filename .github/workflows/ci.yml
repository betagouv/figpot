name: Continuous Integration
on:
  push:
    branches:
      - main
      - dev
  pull_request:
env:
  APP_NAME: figpot
  NODE_OPTIONS: --max_old_space_size=4096
  NODE_VERSION: 20.15.0
  PLAYWRIGHT_BROWSERS_CACHE_FOLDER_SUFFIX: .cache/ms-playwright
  JEST_CACHE_FOLDER_SUFFIX: .cache/jest
concurrency:
  # Prevent parallel builds of the same branch
  group: cicd-${{ github.ref }}
  cancel-in-progress: false
jobs:
  requirements:
    name: Continuous Integration
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Export npm store directory as an environment variable
        shell: bash
        run: |
          echo "STORE_PATH=$(npm config get cache)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup npm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-npm-store-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-store-

      - name: Install dependencies
        env:
          PLAYWRIGHT_BROWSERS_PATH: ${{ env.STORE_PATH }}/${{ env.PLAYWRIGHT_BROWSERS_CACHE_FOLDER_SUFFIX }}
        run: npm install

      - name: Setup API clients
        env:
          PLAYWRIGHT_BROWSERS_PATH: ${{ env.STORE_PATH }}/${{ env.PLAYWRIGHT_BROWSERS_CACHE_FOLDER_SUFFIX }}
        run: npm run setup

      - name: Lint
        run: npm run lint

      - name: Format check
        run: npm run format:check

      - name: Install `docker-compose` for local CI/CD simulations (https://github.com/nektos/act/issues/112#issuecomment-1387307297)
        if: ${{ env.ACT }}
        uses: KengoTODA/actions-setup-docker-compose@v1
        with:
          version: '2.14.2'

      - name: Get number of CPU cores for the following test step
        uses: SimenB/github-actions-cpu-cores@v2
        id: cpu-cores

      - name: Test unit
        env:
          JEST_CACHE_PATH: ${{ env.STORE_PATH }}/${{ env.JEST_CACHE_FOLDER_SUFFIX }}
        run: npm run test:unit --- --max-workers ${{ steps.cpu-cores.outputs.count }}

      - name: Build
        run: npm run build

      - name: Release package
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm run semantic-release
